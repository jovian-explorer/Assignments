# -*- coding: utf-8 -*-
"""fluid  2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17jzjDRZQ21XMSLWuNueq1Z1llPe30JyW

### ***Problem 3***

The first plot shows Variation of density with distance from the martian surface while the second shows the Variation of Pressure with distance from the martian surface.
"""

import numpy as np
import matplotlib.pyplot as plt
import math

#Variation of density with distance from the martian surface
z= np.linspace(0,10000,100)
rho= 0.02*(np.exp(-0.000093242*z))

plt.plot(z,rho)
plt.xlabel("z- Distance from martian surface")
plt.ylabel("Density-Rho")
plt.title("Variation of density with distance from the martian surface")

plt.show()

#Variation of Pressure with distance from the martian surface
P=600+802.57*(np.exp(-9.32*10**(-5)*z)-1)

plt.plot(z,rho,color='green', linestyle='dashed')
plt.xlabel("z- Distance from martian surface")
plt.ylabel("Pressure P")
plt.title("Variation of Pressure with distance from the martian surface")

plt.show()

"""I also attempted to plot the two curves in the sdame graph but the results were not what I expected. I still am attaching the plot."""

import matplotlib.pyplot as plt
# line 1 points
z= np.linspace(0,10000,100)
rho= 0.02*(np.exp(-0.000093242*z))
# plotting the line 1 points 
plt.plot(z, rho, label = "z vs rho")
# line 2 points
z= np.linspace(0,10000,100)
P=600+802.57*(np.exp(-9.32*10**(-5)*z)-1)
# plotting the line 2 points 
plt.plot(z, P, label = "z vs P",color='green', linestyle='dashed')
plt.xlabel('z- Distance from martian surface')
# Set the y axis label of the current axis.
plt.ylabel('rho and/or P')
# Set a title of the current axes.
plt.title('Two or more lines on same plot with suitable legends ')
# show a legend on the plot
plt.legend()
# Display a figure.
plt.show()

"""### ***Problem 5***"""

import numpy as np
import matplotlib.pyplot as plt
import math
 
 
r=np.linspace(0,1,100)
P= np.exp((0.00465/r)**(5/7)-1)
 
plt.plot(r,P)
plt.xlabel("r (in AU)")
plt.ylabel("$P/P_0$")
 
plt.show()